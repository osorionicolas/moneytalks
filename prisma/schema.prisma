datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions"] // You won't need this in Prisma 3.X or higher.
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Group {
  id            String    @id @default(cuid())
  name          String?
  image         String?
  members       User[]
  whiteboard    String?
      id: number
    cover: string
    createdAt: Date
    inviteLink: URL
    groupType: GroupType
    originalDebts: any
    simplifiedDebts: any
}

model Expense {
  id            String    @id @default(cuid())
  description   String
  comments      String?
  category      String
  createdAt     DateTime
  createdBy     User
  updatedAt     DateTime?
  updatedBy     User?
  cost          Int
  currency      String
  groupId:      Int
  repayment: Repayment[]
}

model Notification {
  content     String
  createdAt   DateTime
  createdBy   Int
  id: number
  source: any
  image       String?
}